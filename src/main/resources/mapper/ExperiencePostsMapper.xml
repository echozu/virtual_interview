<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.echo.virtual_interview.mapper.ExperiencePostsMapper">

    <select id="selectPostVOPage"
            resultType="com.echo.virtual_interview.model.dto.experience.ExperiencePostVO">
        SELECT
        p.id AS postId,
        p.title,
        p.likes_count,
        p.comments_count,
        p.is_anonymous,
        p.experience_url,
        p.tags AS tagsJson, -- 将tags的JSON字符串查询出来，命名为tagsJson，方便Java层后续处理
        u.nickname AS authorNickname,
        c.target_position AS position,
        c.target_company AS company,
        c.job_type AS jobType
        FROM
        experience_posts p
        LEFT JOIN users u ON p.user_id = u.id
        -- 核心修复：在JOIN时强制指定排序规则，解决"Illegal mix of collations"错误
        LEFT JOIN interview_sessions s ON p.session_id = s.id COLLATE utf8mb4_general_ci
        LEFT JOIN interview_channels c ON s.channel_id = c.id
        <where>
            p.status = 'PUBLISHED'
            AND p.visibility = 'PUBLIC'
            <if test="query.searchText != null and query.searchText != ''">
                AND (p.title LIKE CONCAT('%', #{query.searchText}, '%') OR p.content LIKE CONCAT('%', #{query.searchText}, '%'))
            </if>
            <if test="query.company != null and query.company != ''">
                AND c.target_company LIKE CONCAT('%', #{query.company}, '%')
            </if>
            <if test="query.jobType != null and query.jobType != ''">
                AND c.job_type = #{query.jobType}
            </if>
            <if test="query.position != null and query.position != ''">
                AND c.target_position LIKE CONCAT('%', #{query.position}, '%')
            </if>
            <if test="query.tags != null and query.tags.size() > 0">
                <foreach collection="query.tags" item="tag" open="" close="" separator="">
                    AND p.tags LIKE CONCAT('%"', #{tag}, '"%')
                </foreach>
            </if>
        </where>
        <choose>
            <when test="query.sortField == 'latest'">
                ORDER BY p.created_at DESC
            </when>
            <when test="query.sortField == 'mostCollected'">
                ORDER BY p.collections_count DESC
            </when>
            <otherwise>
                ORDER BY p.likes_count DESC, p.created_at DESC
            </otherwise>
        </choose>
    </select>
</mapper>
